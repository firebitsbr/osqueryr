% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/osqueryr-driver.R, R/osqueryr-connection.R,
%   R/osqueryr-result.R
\docType{class}
\name{DBI}
\alias{DBI}
\alias{OsqueryDriver-class}
\alias{show,OsqueryDriver-method}
\alias{dbConnect,OsqueryDriver-method}
\alias{dbDataType,OsqueryDriver,ANY-method}
\alias{dbDataType,OsqueryDriver,list-method}
\alias{dbIsValid,OsqueryDriver-method}
\alias{OsqueryConnection-class}
\alias{show,OsqueryConnection-method}
\alias{dbIsValid,OsqueryConnection-method}
\alias{dbDisconnect,OsqueryConnection-method}
\alias{dbSendQuery,OsqueryConnection,character-method}
\alias{dbSendStatement,OsqueryConnection,character-method}
\alias{dbDataType,OsqueryConnection,ANY-method}
\alias{dbQuoteString,OsqueryConnection,character-method}
\alias{dbQuoteIdentifier,OsqueryConnection,character-method}
\alias{dbReadTable,OsqueryConnection,character-method}
\alias{dbListTables,OsqueryConnection-method}
\alias{dbExistsTable,OsqueryConnection,character-method}
\alias{dbListFields,OsqueryConnection,character-method}
\alias{OsqueryResult-class}
\alias{show,OsqueryResult-method}
\alias{dbClearResult,OsqueryResult-method}
\alias{dbFetch,OsqueryResult-method}
\alias{dbHasCompleted,OsqueryResult-method}
\alias{dbIsValid,OsqueryResult-method}
\alias{dbGetStatement,OsqueryResult-method}
\title{DBI methods}
\usage{
\S4method{show}{OsqueryDriver}(object)

\S4method{dbConnect}{OsqueryDriver}(drv, host = NULL, keyfile = NULL,
  osquery_remote_path = NULL, ...)

\S4method{dbDataType}{OsqueryDriver,ANY}(dbObj, obj, ...)

\S4method{dbDataType}{OsqueryDriver,list}(dbObj, obj, ...)

\S4method{dbIsValid}{OsqueryDriver}(dbObj, ...)

\S4method{show}{OsqueryConnection}(object)

\S4method{dbIsValid}{OsqueryConnection}(dbObj, ...)

\S4method{dbDisconnect}{OsqueryConnection}(conn, ...)

\S4method{dbSendQuery}{OsqueryConnection,character}(conn, statement, ...)

\S4method{dbSendStatement}{OsqueryConnection,character}(conn, statement, ...)

\S4method{dbDataType}{OsqueryConnection,ANY}(dbObj, obj, ...)

\S4method{dbQuoteString}{OsqueryConnection,character}(conn, x, ...)

\S4method{dbQuoteIdentifier}{OsqueryConnection,character}(conn, x, ...)

\S4method{dbReadTable}{OsqueryConnection,character}(conn, name, ...)

\S4method{dbListTables}{OsqueryConnection}(conn, ...)

\S4method{dbExistsTable}{OsqueryConnection,character}(conn, name, ...)

\S4method{dbListFields}{OsqueryConnection,character}(conn, name, ...)

\S4method{show}{OsqueryResult}(object)

\S4method{dbClearResult}{OsqueryResult}(res, ...)

\S4method{dbFetch}{OsqueryResult}(res, n = -1, ...)

\S4method{dbHasCompleted}{OsqueryResult}(res, ...)

\S4method{dbIsValid}{OsqueryResult}(dbObj, ...)

\S4method{dbGetStatement}{OsqueryResult}(res, ...)
}
\arguments{
\item{object}{Any R object}

\item{drv}{an object that inherits from \linkS4class{DBIDriver},
or an existing \linkS4class{DBIConnection}
object (in order to clone an existing connection).}

\item{host}{\code{NULL} (default) if using \code{osqueryi} locally; an ssh server string of the
form \code{[user@]hostname[:@port]}}

\item{keyfile}{\code{NULL} (default) if using \code{osqueryi} locally; path to private key file.
Must be in OpenSSH format (see details)}

\item{osquery_remote_path}{if connecting to a remote system and \code{osqueryi} is not on
the \code{PATH} for the \code{ssh} connection, provide it here. Ignored if using locally.}

\item{...}{authentication arguments needed by the DBMS instance; these
typically include \code{user}, \code{password}, \code{host}, \code{port}, \code{dbname}, etc.
For details see the appropriate \code{DBIDriver}.}

\item{dbObj}{A object inheriting from \linkS4class{DBIDriver}
or \linkS4class{DBIConnection}}

\item{obj}{An R object whose SQL type we want to determine.}

\item{conn}{A \linkS4class{DBIConnection} object, as returned by
\code{\link[=dbConnect]{dbConnect()}}.}

\item{statement}{a character string containing SQL.}

\item{x}{A character vector to quote as string.}

\item{name}{A character string specifying the unquoted DBMS table name,
or the result of a call to \code{\link[=dbQuoteIdentifier]{dbQuoteIdentifier()}}.}

\item{res}{An object inheriting from \linkS4class{DBIResult}.}

\item{n}{maximum number of records to retrieve per fetch. Use \code{n = -1}
or \code{n = Inf}
to retrieve all pending records.  Some implementations may recognize other
special values.}
}
\description{
Implementations of pure virtual functions defined in the `DBI` package.
}
